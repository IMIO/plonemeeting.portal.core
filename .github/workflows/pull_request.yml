# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Pull Request

on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache eggs
      uses: actions/cache@v2
      env:
        cache-name: cache-eggs
      with:
        path: ./buildout-cache/eggs
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }}-${{ hashFiles('setup.*') }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }}
    - name: Buildout action
      uses: IMIO/plonemeeting.portal.core/@master
      with:
        py-version: ${{ matrix.python-version }}
    - name: code analysis
      run: |
        pre-commit run --all-files
    - name: Test
      run: |
        bin/test

  coverage:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.8 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache eggs
        uses: actions/cache@v2
        env:
          cache-name: cache-eggs
        with:
          path: ./buildout-cache/eggs
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }} }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }}
      - name: Buildout action
        uses: IMIO/plonemeeting.portal.core/@master
        with:
          py-version: ${{ matrix.python-version }}
      - name: Test
        run: |
          coverage run bin/test
        continue-on-error: true
      - name: Report
        run: |
          coverage report
          coverage xml
      - name: Cobertura
        uses: 5monkeys/cobertura-action@v9
        with:
          path: coverage.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 90
      - name: Publish to Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          coveralls --service=github
